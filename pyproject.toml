[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "src-check"
version = "0.2.0"
description = "Python code quality analysis and KPI scoring system"
authors = [{name = "Development Team", email = "dev@example.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.8"
keywords = ["code-quality", "analysis", "kpi", "python", "static-analysis"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Quality Assurance",
]

dependencies = [
    "pyyaml>=5.0",
    "toml>=0.10.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-cov>=4.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.0",
    "types-PyYAML>=6.0",
    "types-toml>=0.10",
    "psutil>=5.9.0",
]
visualization = [
    "graphviz>=0.20",
]

[project.scripts]
src-check = "src_check.cli.main:main"
src-check-kpi = "src_check.cli.kpi:main"

[project.urls]
Homepage = "https://github.com/yourusername/src-check"
Documentation = "https://github.com/yourusername/src-check#readme"
Repository = "https://github.com/yourusername/src-check"
Issues = "https://github.com/yourusername/src-check/issues"
Changelog = "https://github.com/yourusername/src-check/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/src_check"]

[tool.hatch.version]
path = "src/src_check/__init__.py"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src_check --cov-report=html --cov-report=term"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py38"
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "RUF"]
ignore = ["E501", "RUF001", "RUF002", "RUF003"]

[tool.ruff.lint.isort]
known-first-party = ["src_check"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[dependency-groups]
dev = [
    "black>=24.8.0",
    "mypy>=1.14.1",
    "pytest>=8.3.5",
    "pytest-cov>=5.0.0",
    "ruff>=0.12.1",
]
